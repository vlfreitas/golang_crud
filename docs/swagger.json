{
    "swagger": "2.0",
    "info": {
        "description": "A User service API in Go using Gin framework",
        "title": "Users Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/users/": {
            "get": {
                "description": "Return list of users.",
                "tags": [
                    "users"
                ],
                "summary": "Get All users.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "description": "Save users data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create users",
                "parameters": [
                    {
                        "description": "Create users",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Return the users whoes id value match id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Single user by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update users by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update users data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update users",
                "parameters": [
                    {
                        "description": "Update user",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "update user by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Remove user data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update users by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.UserRegister": {
            "type": "object",
            "required": [
                "address",
                "age",
                "email",
                "name",
                "password"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}